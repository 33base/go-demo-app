 9772  k -n demo get svc front-canary -o yaml
 9774  k -n demo get svc front-canary -o yaml --export|sed 's/weight: 5$/weight: 50/'
 9775  k -n demo get svc front-prod-o yaml --export
 9776  k -n demo get svc front-prod -o yaml --export
 9777  k -n demo get svc 
 9778  k -n demo get svc front-o yaml --export
 9779  k -n demo get svc front -o yaml --export
 9780  k -n demo get svc front-canary -o yaml --export|sed 's/weight: 50$/weight: 5/'
 9783  k -n demo get svc front-canary -o yaml --export
 9784  k -n demo get svc front-canary
 9785  k -n demo edit svc front-canary
 9786  k -n demo delete -f yaml/front-canary.yaml
 9787  k -n demo delete -f yaml/front.yaml
 9788  k -n demo delete -f yaml/data.yaml
 9800  k -n demo scale deployment front --replicas 5
 9801  k -n demo scale deployment front --replicas 1
 9805  k -n demo delete po ambassador-8cb8cd566-7kggn
 9807  k -n demo logs ambassador-8cb8cd566-268dt ambassador
 9809  k -n demo delete -f yaml/ambassador.yaml
 9820  k -n demo delete deploy front
 9821  k -n demo delete deploy front-v1
 9822  k -n demo delete svc front
 9823  k -n demo delete deploy front-v2
 9857  k -n demo scale deployment front-v1 --replicas 1
10014* k -n demo get po -L LABEL
10018* k -n demo exec -it $(k -n demo get po -l app=db) bash
10020* k -n demo get po -l app=db --no-headers -o=name
10021* k -n demo exec -it $(k -n demo get po -l app=db --no-headers -o=name) bash
10022* k -n demo exec -it $(k -n demo get po -l app=db -o custom-colums=.metadata.name  bash
10023* k -n demo get po -l app=db --no-headers -o custom-colums=.metadata.name
10024* k -n demo get po -l app=db --no-headers -o custom-colums=:metadata.name
10026* k -n demo exec -it $(k -n demo get po -l app=db --no-headers -o custom-columns=:metadata.name) bash
10027* k -n demo get po -l app=db --no-headers -o custom-columns=:metadata.image
10028* k -n demo get po -l app=db -o yaml
10029* k -n demo get po -l app=db --no-headers -o custom-columns=:spec.containers.name
10030* k -n demo get po -l app=db --no-headers -o custom-columns=:spec.containers.imafe
10032* k -n demo get po -l app=db --no-headers -o custom-columns=:metadata.name
10033* k -n demo get po -l app=db --no-headers -o custom-columns=:metadata.namespace
10034* k -n demo get po -l app=db --no-headers -o custom-columns=:spec.containers
10035* k -n demo get po -l app=db --no-headers -o custom-columns=:spec.containers.image
10036* k -n demo get po -l app=db --no-headers -o custom-columns=:spec.containers:image
10037* k -n demo get po -l app=db --no-headers -o custom-columns=name:metadata.namespace
10038* k -n demo get po -l app= -o custom-columns=name:metadata.namespace
10039* k -n demo get po -l app=db -o custom-columns=name:metadata.namespace
10040* k -n demo get po -l app= -o custom-columns=name:metadata
10041* k -n demo get po -l app=db -o custom-columns=name:metadata
10042* k -n demo get po -l app=db -o custom-columns=name:metadata.volumes
10043* k -n demo get po -l app=db -o custom-columns=name:containers.image
10044* k -n demo get po -l app=db -o custom-columns=name:containers
10046* k -n demo get po -l app=db -o custom-columns=name:spec.containers.resources
10047* k -n demo get po -l app=db -o custom-columns=name:spec.containers:resources
10048* k -n demo get po -l app=db -o custom-columns=name:spec.containers.imagePullPolicy
10049* k -n demo get po -l app=db -o=jsonpath='{.items[0].metadata.name}'
10051* k -n demo get po -l app=db -o=jsonpath='{.items[0].spec.containers.image}'
10056* k -n demo get po -l app=db -o=jsonpath='{..images}'
10058* k -n demo get po -l app=db -o custom-columns=name:..image
10069* k -n demo get po -l app=db -o jsonpath="{..image}"
10106* k -n demo get po -o json
10107* k -n demo get po -o json|jq
10108* k -n demo describe po db -o json
10109* k -n demo get po db -o json
10110* k -n demo get svc db -o json
10111* k -n demo get svc db -o json|jq
10114* k -n demo get po -o json|jq ".items[]|{name:.metadata.name}"
10139* k -n demo set image deploy/front-v1 service=denvasyliev/front:v0.1.5-bootcamp-b99453c
10140* k -n demo set image deploy/front-v1 front=denvasyliev/front:v0.1.5-bootcamp-b99453c
10142* k -n demo set image deploy/service-v1 service=denvasyliev/service:v0.1.5-bootcamp-b99453c
10146* k -n demo set image deploy/service-v1 service=denvasyliev/service:v0.1.5-bootcamp-fec60fd
10154* k -n demo set image deploy/service-v2 service=denvasyliev/service:v0.1.5-bootcamp-fec60fd
10156* k -n demo set image deploy/service-v1 service=denvasyliev/service:v0.1.5-bootcamp-e6fbf49
10167* k -n demo set image deploy/front-v1 front=denvasyliev/service:v0.1.5-bootcamp-e6fbf49
10168* k -n demo set image deploy/front-v1 front=denvasyliev/denvasyliev/front:v0.1.5-bootcamp-e6fbf49
10169* k -n demo set image deploy/front-v1 front=denvasyliev/front:v0.1.5-bootcamp-e6fbf49
10172* k -n demo set image deploy/service-v2 service=denvasyliev/denvasyliev/service:v0.1.6-bootcamp-1479c0a
10183* k -n demo logs data-785b65d467-f5vdl
10184* k -n demo logs data-785b65d467-f5vdl data
10185* k -n demo set image deploy/data data=denvasyliev/data:v0.1.5-bootcamp-1479c0a
10187* k -n demo logs data-785b65d467-lhmcc
10188* k -n demo logs data-785b65d467-lhmcc data
10189* k -n demo set image deploy/data data=denvasyliev/data:v0.1.5-4eeeb47
10191* k -n demo get event
10192* k -n demo get hpa
10193* k -n demo get hpa -o yaml
10194* k -n demo describe hpa
10195* k -n demo delete hpa
10196* k -n demo delete hpa data-prod
10202* k -n demo top po service --containers
10203* k -n demo top po $(k -n demo get pod -l app=service -o name --no-headers) --containers
10204* k -n demo top po $(k -n demo get pod -l app=service -o custom-columns=:.metadata.name name --no-headers) --containers
10205* k -n demo top po $(k -n demo get pod -l app=service -o custom-columns=:.metadata.name --no-headers) --containers
10267* k -n demo get po --v=2
10268* k -n demo get po --v=3
10269* k -n demo get po --v=4
10270* k -n demo get po --v=6
10271* k -n demo get po --v=7
10279* k -n demo get po -l app=front-v1 -o jsonpath="{..image}"
10280* k -n demo get po -l app=front-v2 -o jsonpath="{..image}"
10281* k -n demo get po -l app=service-v1 -o jsonpath="{..image}"
10282* k -n demo get po -l app=service -o jsonpath="{..image}"
10319* k -n demo get po -o custom-columns=:.metadata.name
10320* k -n demo get po -o custom-columns=:.metadata.name --no-headers
10336* k -n demo describe po ambassador.yaml
10337* k -n demo describe po ambassador-6f65cbdd97-94wcl
10338* k -n demo get svc -o wide
10339* k -n demo get po -o wide
10340* k -n demo get no gke-devopsday-default-pool-1c3cd121-xvhm
10341* k -n demo get no gke-devopsday-default-pool-1c3cd121-xvhm -o wide
10342* k -n demo get po -l service=ambassador -o custom-columns=:.metadata.image
10343* k -n demo get po -l service=ambassador
10344* k -n demo get po -l service=ambassador -o yaml
10345* k -n demo get po -l service=ambassador -o custom-columns=:.spec.image
10346* k -n demo get po -l service=ambassador -o custom-columns=:..spec.image
10347* k -n demo get po -l service=ambassador -o custom-columns=:.spec..image
10348* k -n demo get po -l service=ambassador -o custom-columns=:.spec.containers.image
10349* k -n demo get po -l service=ambassador -o custom-columns=:.spec.containers..image
10352* k -n demo set image deploy ambassador ambassador=quay.io/datawire/ambassador:0.32.2
10354* k -n demo set image deploy ambassador ambassador=quay.io/datawire/ambassador:0.32.0 --record
10355* k -n demo set image deploy ambassador ambassador=quay.io/datawire/ambassador:0.32.2 --record
10356* k -n demo rollout undo deployment ambassador --to-revision 3
10358* k -n demo rollout history deploy ambassador
10359* k -n demo rollout undo deployment ambassador --to-revision 4
10363* k -n demo exec db-744669648c-tjztz -it bash
10371* k -n demo exec $(k -n demo get po -l app=redis -o name)
10372* k -n demo exec $(k -n demo get po -l app=redis -o name) bash
10373* k -n demo get po -l app=redis -o name
10377* k -n demo -it exec $(k -n demo get po -l app=redis -o custom-columns=:.metadata.name) bash
10383* k -n demo create -f front-v1.yaml --record
10385* k -n demo logs ambassador-7b6466ff4c-xhj82
10387* k -n demo port-forward po front-v1-674fcf97b5-5j8nb 8080:80
10388* k -n demo port-forward po/front-v1-674fcf97b5-5j8nb 8080:80
10450* k -n demo set image deploy/data data=denvasyliev/data:v0.1.5-bootcamp-6b67ee2
10478* k -n demo set image deploy/service-v1 service=denvasyliev/service:v0.1.5-bootcamp-newfeature-b815c50
10498* k -n demo describe po service-v2-54544557df-wlpgq
10674* k -n demo exec -it front-v1-7f57bd56c9-6gdv6 -c front curl service/version
10675* k -n demo exec -it front-v1-7f57bd56c9-6gdv6 -c front "while true; do curl -s service/version| grep --color -E 'v2'|$;sleep 0.4;done" 
10688* k -n demo logs service-v1-7586b8cbb-2bbzw --tail 20
10689* k -n demo logs service-v1-7586b8cbb-2bbzw -c service --tail 20
10690* k -n demo logs service-v1-7586b8cbb-2bbzw -c service --tail 20 -f
10769* k -n demo get rolebinding
10770* k -n demo get sa
10781* k -n demo get po -l app-db
10783* k -n demo get po -l app=db -o=name
10787* k -n demo exec -it db-744669648c-jlp4m bash
10848* k -n demo set image deploy/service-v1 service=denvasyliev/service:v0.1.5-bootcamp-v1-cab4a2f
10853* k -n demo exec -it $(k -n demo get po -l app=front -o custom-columns=:.metadata.name) -c front bash
10855* k -n demo get po -l app=front -o custom-columns=:.metadata..name
10856* k -n demo get po -l app=front
10857* k -n demo get po --show-labels
10871* k -n demo exec -it $(k -n demo get po -l app=front-v1 -o custmo-columns=:.metadata.name|tail -1) -c front bash
10882* k -n demo get endpoints
10926* k -n demo get cm istio-service-rule -o yaml --export

10982* k -n demo log ambassador-7b6466ff4c-nfzpn
11006* k -n demo scale deployment ambassador --replicas 1
11009* k -n demo edit svc front
11016* k -n demo delete svc ambassador
11018* k -n demo edit svc front-v1
11019* k -n demo get po -l app=db
11020* k -n demo exec -it db-6547cf8f88-4s5q7 -c db ash
11021* k -n demo exec -it db-6547cf8f88-4s5q7 -c db bash
11022* k -n demo edit deploy service
11025* k -n demo delete -f yaml/service-v2.yaml
11030* k -n demo describe po service-v1-578cdb846c-snqr2
11031* k -n demo edit deploy service-v1
11032* k -n demo scale deployment service-v1 --replicas 2
11033* k -n demo scale deployment service-v1 --replicas 1
11034* k -n demo edit svc kubernetes db
11035* k -n demo edit svc  db
11041* k -n demo delete -f yaml/service-v1.yaml
11042* k -n demo delete -f yaml/front-v2.yaml
11056* k -n demo get svc front-v2 -o yaml
11064* k -n demo get deploy ambassador -o yaml
11065* k -n demo set image deploy/ambassador ambassador=quay.io/datawire/ambassador:0.32.2
11067* k -n demo set image deploy/ambassador ambassador=quay.io/datawire/ambassador:0.32.0 --record
11068* k -n demo rollout history deployment ambassador
11069* k -n demo rollout undo deployment ambassador --to-revision 1
11070* k -n demo get deploy ambassador -o wide
11074* k -n demo edit svc front-v2
11076* k -n demo exec -it $(k -n demo get po -l app=front-v1 -o custom-columns=:.metadata.name|tail -1) -c front bash
11085* k -n demo get po -w
11092* k -n demo scale deployment ambassador --replicas 1
11093* k -n demo scale deployment service-v1 --replicas 1
11095* k -n demo exec -it db-744669648c-k5zv8 -c db bash
11096* k -n demo patch svc db --type='json' -p='[{"op": "replace", "path": "/spec/ports/0/targetPort", "value":3306}]'
