---
apiVersion: apps/v1 
kind: Deployment
metadata:
  name: {{ .Release.Name }}-api
  namespace: {{ .Release.Namespace }}
  labels:
    version: {{ .Values.app.version }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-api
  replicas: {{ .Values.api.replicas}}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-api
        version: {{ .Values.app.version }}
    spec:
      containers:
      - name: api
        image: {{ .Values.image.name }}:{{ .Values.image.tag }}
        command:
          - ./app
          - "-role"
          - "api"
        imagePullPolicy: Always
        env:
          - name: APP_BACKEND
            value: "{{ .Release.Name }}-iscii"
          - name: APP_DATASTORE
            value: "{{ .Release.Name }}-data"
          - name: APP_DB
            value: "{{ .Release.Name }}-db-sql"
          - name: APP_LICENSE
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-secret
                key: license
        volumeMounts:
        - name: data
          mountPath: /data
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 80
        securityContext:
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.api.port }}
          initialDelaySeconds: 10
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /readinez
            port: {{ .Values.api.port }}
          initialDelaySeconds: 15
          periodSeconds: 3
      volumes:
        - name: data
          configMap:
            name: {{ .Release.Name }}-configmap

